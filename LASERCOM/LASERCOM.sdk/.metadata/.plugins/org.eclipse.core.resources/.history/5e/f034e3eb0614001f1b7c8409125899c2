// includes
#include "xparameters.h"
#include "xgpio.h"

#define PRINT(...) xil_printf(__VA_ARGS__)
#define DATACHANNEL 1
#define DATADIRECTION_IN 0xffffffff
#define DATADIRECTION_OUT 0x00000000

XGpio tx_full, tx_send, tx_data, pf_read, pf_ready, pf_data;

void send_packet(u32 data) {
	while(XGpio_DiscreteRead(&tx_full, DATACHANNEL) == 1) {};
	XGpio_DiscreteWrite(&tx_data, DATACHANNEL, data);
	XGpio_DiscreteWrite(&tx_send, DATACHANNEL, 1);
	XGpio_DiscreteWrite(&tx_send, DATACHANNEL, 0);
}

int init(void) {
	PRINT("-- Initializing --\r\n");

	XGpio_Initialize(&tx_full, XPAR_TX_FULL_IO_DEVICE_ID);
	XGpio_SetDataDirection(&tx_full, DATACHANNEL, DATADIRECTION_IN);

	XGpio_Initialize(&tx_data, XPAR_TX_DATA_IO_DEVICE_ID);
	XGpio_SetDataDirection(&tx_data, DATACHANNEL, DATADIRECTION_OUT);

	XGpio_Initialize(&tx_send, XPAR_TX_SEND_IO_DEVICE_ID);
	XGpio_SetDataDirection(&tx_send, DATACHANNEL, DATADIRECTION_OUT);

	XGpio_Initialize(&pf_read, XPAR_PF_READ_DEVICE_ID);
	XGpio_SetDataDirection(&pf_read, DATACHANNEL, DATADIRECTION_OUT);

	XGpio_Initialize(&pf_ready, XPAR_PF_READY_DEVICE_ID);
	XGpio_SetDataDirection(&pf_ready, DATACHANNEL, DATADIRECTION_IN);

	XGpio_Initialize(&pf_data, XPAR_PF_DATA_DEVICE_ID);
	XGpio_SetDataDirection(&pf_data, DATACHANNEL, DATADIRECTION_IN);

	PRINT("-- Finished initialization -- \r\n");
	return 0;
}

void loop(void) {
	int count = 0;
	while(1) {
		u32 data = count == 0 ? 0x424F4F42 : 0xF0F0F0F0;
		count++;
		if (count > 1) count = 0;
		send_packet(data);
	}
}

int main() {
	init();
	loop();
	return 0;
}
